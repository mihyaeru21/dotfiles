# Prefix<C-t>に
set-option -g prefix C-t

# ペインのサイズ変更をvim風にする
# ＜Prefix＞＜Ctrl + { h | i | j | k }＞
# ＜Ctrl + { h | i | j | k }＞は連続して入力可能。
# 1回押すごとに5行(列)境界を移動させる。
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5

# ペインの移動1(Vim風にする)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# コピーモードでviキーバインド
set-window-option -g mode-keys vi

# 設定ファイル再読み込み
bind r source-file ~/.tmux.conf \; display "Reload Config!"

# スクロールで戻れる行数
set-option -g history-limit 100000

# page_current_path
bind '"' split-window -v -c "#{pane_current_path}"
bind '%' split-window -h -c "#{pane_current_path}"
bind 'c' new-window -c "#{pane_current_path}"

# キーストロークのディレイを減らす
set -sg escape-time 1

# OSC52 のやつを有効にする
set -g set-clipboard on


#
# 見た目
#

# 256 screenを使用
set-option -g default-terminal screen-256color
# https://qiita.com/yami_beta/items/ef535d3458addd2e8fbb
set-option -ga terminal-overrides ",xterm-256color:Tc"

# 更新頻度
set-option -g status-interval 1

# 文字色と背景色
set -g status-style "fg=#719cd6,bg=#131a24"

# ウィンドウリストの色を設定する
setw -g window-status-style "NONE,fg=#71839b,bg=#131a24"
# アクティブなウィンドウを目立たせる
setw -g window-status-current-style "NONE,fg=#131a24,bg=#71839b"
# 変更があった部分のスタイル
setw -g window-status-activity-style "underscore,fg=#71839b,bg=#131a24"

# コマンドラインの色を設定する
set -g message-style fg=white,bg=black,bright

# 左パネルを設定する
set -g status-left-length 20
set -g status-left "#h > #S > "
# 右パネルを設定する
set -g status-right-length 80
set -g status-right "#(tmux-mem-cpu-load -i 1 -g 0) | #[fg=white]%Y-%m-%d %H:%M:%S "
# set -g status-right "#(tmux-mem-cpu-load 1) #[fg=blue]$LANG #[fg=white]< #[fg=white]%Y-%m-%d %H:%M:%S "
# ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on
# ステータスバーの位置を下に
set -g status-position bottom

# ウィンドウのインデックスを1から始める
set -g base-index 1
# ペインのインデックスを1から始める
setw -g pane-base-index 1

